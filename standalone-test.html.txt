<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Mouse Tracking Test</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
        .passage { background: #f5f5f5; padding: 20px; margin: 20px 0; border-radius: 5px; }
        canvas { border: 2px solid #333; display: block; margin: 20px auto; }
        .question { font-size: 18px; margin: 20px 0; text-align: center; }
        .buttons { text-align: center; margin: 20px 0; }
        button { padding: 10px 20px; margin: 0 10px; font-size: 16px; cursor: pointer; }
        .start-btn { background: green; color: white; border: none; }
        .response-btn { background: blue; color: white; border: none; }
        .hidden { display: none; }
        .results { margin: 20px 0; padding: 20px; background: #e8f5e8; }
    </style>
</head>
<body>
    <h1>Reading Comprehension with Mouse Tracking</h1>
    
    <h2>Sustainable Energy Systems</h2>
    <div class="passage">
        Modern engineering focuses extensively on renewable energy technologies to address climate change concerns. Solar photovoltaic panels convert sunlight directly into electrical energy through semiconductor materials, while wind turbines harness kinetic energy from atmospheric currents. Engineers must optimize efficiency ratios and minimize energy losses during transmission through electrical grids. Hydroelectric dams utilize gravitational potential energy, transforming flowing water into mechanical rotation that drives generators. Battery storage systems accumulate surplus energy during peak production periods, releasing it when demand exceeds generation capacity. These sustainable solutions require sophisticated control algorithms and monitoring systems to maintain grid stability and ensure reliable power distribution to consumers nationwide.
    </div>

    <canvas id="mouseCanvas" width="600" height="300"></canvas>
    
    <div class="question" id="questionText">
        Photovoltaic panels convert kinetic energy from wind into electrical energy.
    </div>
    
    <div class="buttons">
        <button class="start-btn" id="startBtn">START TRACKING</button>
        <button class="response-btn hidden" id="trueBtn">TRUE</button>
        <button class="response-btn hidden" id="falseBtn">FALSE</button>
    </div>

    <div class="results hidden" id="results">
        <h3>Results:</h3>
        <p>Your answer: <span id="userAnswer"></span></p>
        <p>Correct answer: FALSE</p>
        <p>Response time: <span id="responseTime"></span> ms</p>
        <p>Mouse movements recorded: <span id="movementCount"></span></p>
    </div>

    <script>
        const canvas = document.getElementById('mouseCanvas');
        const ctx = canvas.getContext('2d');
        const startBtn = document.getElementById('startBtn');
        const trueBtn = document.getElementById('trueBtn');
        const falseBtn = document.getElementById('falseBtn');
        const results = document.getElementById('results');
        
        let mouseData = [];
        let startTime;
        let tracking = false;

        // Clear canvas
        ctx.fillStyle = '#f9f9f9';
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = 'black';
        ctx.font = '16px Arial';
        ctx.textAlign = 'center';
        ctx.fillText('Click START to begin mouse tracking', canvas.width/2, canvas.height/2);

        startBtn.addEventListener('click', function() {
            // Start tracking
            startTime = Date.now();
            tracking = true;
            mouseData = [];
            
            // Clear canvas
            ctx.fillStyle = '#f9f9f9';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            // Show response buttons, hide start button
            startBtn.classList.add('hidden');
            trueBtn.classList.remove('hidden');
            falseBtn.classList.remove('hidden');
            
            console.log('Mouse tracking started!');
        });

        // Track mouse movements on canvas
        canvas.addEventListener('mousemove', function(e) {
            if (!tracking) return;
            
            const rect = canvas.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            const time = Date.now() - startTime;
            
            mouseData.push({x: x, y: y, time: time});
            
            // Draw blue trail
            if (mouseData.length > 1) {
                const prev = mouseData[mouseData.length - 2];
                ctx.strokeStyle = 'blue';
                ctx.lineWidth = 3;
                ctx.beginPath();
                ctx.moveTo(prev.x, prev.y);
                ctx.lineTo(x, y);
                ctx.stroke();
            }
        });

        // Handle responses
        function handleResponse(answer) {
            if (!tracking) return;
            
            tracking = false;
            const endTime = Date.now();
            const responseTime = endTime - startTime;
            
            // Show results
            document.getElementById('userAnswer').textContent = answer;
            document.getElementById('responseTime').textContent = responseTime;
            document.getElementById('movementCount').textContent = mouseData.length;
            results.classList.remove('hidden');
            
            // Hide buttons
            trueBtn.classList.add('hidden');
            falseBtn.classList.add('hidden');
            
            console.log('Response:', answer);
            console.log('Response time:', responseTime, 'ms');
            console.log('Mouse data points:', mouseData.length);
            console.log('Mouse movements:', mouseData);
        }

        trueBtn.addEventListener('click', () => handleResponse('TRUE'));
        falseBtn.addEventListener('click', () => handleResponse('FALSE'));
    </script>
</body>
</html>